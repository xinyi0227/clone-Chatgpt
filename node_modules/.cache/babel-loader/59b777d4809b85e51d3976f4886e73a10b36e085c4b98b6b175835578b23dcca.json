{"ast":null,"code":"\"use strict\";\n\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Translations = void 0;\nconst resource_1 = require(\"../../resource.js\");\nconst Core = __importStar(require(\"../../core.js\"));\nclass Translations extends resource_1.APIResource {\n  /**\n   * Translates audio into English.\n   */\n  create(body, options) {\n    return this._client.post('/audio/translations', Core.multipartFormRequestOptions({\n      body,\n      ...options\n    }));\n  }\n}\nexports.Translations = Translations;\n(function (Translations) {})(Translations = exports.Translations || (exports.Translations = {}));","map":{"version":3,"names":["resource_1","require","Core","__importStar","Translations","APIResource","create","body","options","_client","post","multipartFormRequestOptions","exports"],"sources":["C:\\Users\\user\\Desktop\\ReactJS\\chatgpt-clone\\node_modules\\openai\\src\\resources\\audio\\translations.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../resource';\nimport * as Core from '../../core';\nimport * as TranslationsAPI from './translations';\nimport * as AudioAPI from './audio';\n\nexport class Translations extends APIResource {\n  /**\n   * Translates audio into English.\n   */\n  create(body: TranslationCreateParams, options?: Core.RequestOptions): Core.APIPromise<Translation> {\n    return this._client.post('/audio/translations', Core.multipartFormRequestOptions({ body, ...options }));\n  }\n}\n\nexport interface Translation {\n  text: string;\n}\n\nexport interface TranslationCreateParams {\n  /**\n   * The audio file object (not file name) translate, in one of these formats: flac,\n   * mp3, mp4, mpeg, mpga, m4a, ogg, wav, or webm.\n   */\n  file: Core.Uploadable;\n\n  /**\n   * ID of the model to use. Only `whisper-1` (which is powered by our open source\n   * Whisper V2 model) is currently available.\n   */\n  model: (string & {}) | AudioAPI.AudioModel;\n\n  /**\n   * An optional text to guide the model's style or continue a previous audio\n   * segment. The\n   * [prompt](https://platform.openai.com/docs/guides/speech-to-text/prompting)\n   * should be in English.\n   */\n  prompt?: string;\n\n  /**\n   * The format of the transcript output, in one of these options: `json`, `text`,\n   * `srt`, `verbose_json`, or `vtt`.\n   */\n  response_format?: string;\n\n  /**\n   * The sampling temperature, between 0 and 1. Higher values like 0.8 will make the\n   * output more random, while lower values like 0.2 will make it more focused and\n   * deterministic. If set to 0, the model will use\n   * [log probability](https://en.wikipedia.org/wiki/Log_probability) to\n   * automatically increase the temperature until certain thresholds are hit.\n   */\n  temperature?: number;\n}\n\nexport namespace Translations {\n  export import Translation = TranslationsAPI.Translation;\n  export import TranslationCreateParams = TranslationsAPI.TranslationCreateParams;\n}\n"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,MAAAA,UAAA,GAAAC,OAAA;AACA,MAAAC,IAAA,GAAAC,YAAA,CAAAF,OAAA;AAIA,MAAaG,YAAa,SAAQJ,UAAA,CAAAK,WAAW;EAC3C;;;EAGAC,MAAMA,CAACC,IAA6B,EAAEC,OAA6B;IACjE,OAAO,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,qBAAqB,EAAER,IAAI,CAACS,2BAA2B,CAAC;MAAEJ,IAAI;MAAE,GAAGC;IAAO,CAAE,CAAC,CAAC;EACzG;;AANFI,OAAA,CAAAR,YAAA,GAAAA,YAAA;AAkDA,WAAiBA,YAAY,GAG7B,CAAC,EAHgBA,YAAY,GAAZQ,OAAA,CAAAR,YAAY,KAAZQ,OAAA,CAAAR,YAAY","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}